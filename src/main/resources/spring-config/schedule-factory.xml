<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	
    <!-- ============ 定时设置 ============ 
    	每10秒：*/10 * * * * ?
    	每10分钟：0 */10 * * * ?
		每天0:00运行： 0 0 0 * * ?  
		每天1:00运行： 0 0 1 * * ?   
		每1个小时执行一次    0 0 * * * ?  
		每5分钟： 0 0/5 * * * ? *
    -->
	
	<bean id="jobDetail_Demo4Tx" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
 		<property name="jobClass" value="com.cf.code.job.Demo4Tx" />
		<property name="durability" value="true"/>
		<property name="requestsRecovery" value="true"/>
	</bean>
	
	<bean id="cronTrigger_jobDetail_Demo4Tx" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail_Demo4Tx" />
		<property name="cronExpression" value="0 0/1 * * * ? *" />
	</bean>
	
	<!-- 定时任务主配置 -->
	<bean id="nsScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean" scope="singleton" lazy-init="false"> 
		<property name="applicationContextSchedulerContextKey" value="ApplicationContextKey" />
		<property name="dataSource" ref="Quartz-DataSource" />
		<property name="overwriteExistingJobs" value="true" />
		<property name="quartzProperties"> 
			<props>
				<prop key="org.quartz.scheduler.instanceName">nsScheduler</prop> 
				<prop key="org.quartz.scheduler.instanceId">AUTO</prop>
				<prop key="org.quartz.scheduler.rmi.export">false</prop>
				<prop key="org.quartz.scheduler.rmi.proxy">false</prop>
				<prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">false</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
				<prop key="org.quartz.threadPool.threadCount">10</prop>    
               	<prop key="org.quartz.threadPool.threadPriority">5</prop>
               	<prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
               	<prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
               	<prop key="org.quartz.jobStore.driverDelegateClass">org.quartz.impl.jdbcjobstore.StdJDBCDelegate</prop> 
               	<prop key="org.quartz.jobStore.tablePrefix">qrtz_</prop>
               	<prop key="org.quartz.jobStore.useProperties">false</prop>
               	<prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
               	<prop key="org.quartz.jobStore.maxMisfiresToHandleAtATime">10</prop>   
               	<prop key="org.quartz.jobStore.isClustered">true</prop>
               	<prop key="org.quartz.jobStore.clusterCheckinInterval">5000</prop>  
			</props>
		</property>
		<property name="startupDelay" value="30" />
		<property name="autoStartup" value="false"/>
		<property name="triggers">
			<list>
				<ref local="cronTrigger_jobDetail_Demo4Tx" />
			</list>
		</property>
	</bean>

</beans>